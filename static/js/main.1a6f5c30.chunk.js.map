{"version":3,"sources":["actions/index.ts","components/spiner/index.ts","components/spiner/spinner.tsx","components/error-indicator/index.ts","components/error-indicator/error-indicator.tsx","services/bookstore-service.ts","components/bookstore-service-context/bookstore-service-context.ts","components/bookstore-service-context/index.ts","reducers/selectors.ts","components/update-book-form/index.ts","components/update-book-form/update-book-form.tsx","components/add-book-form/index.ts","components/add-book-form/add-book-form.tsx","components/search-field/index.ts","components/search-field/search-field.tsx","components/book-list/index.ts","components/book-list/book-list.tsx","components/pages/catalog-page.tsx","shopping-cart-table/selectors.ts","shopping-book-cart-item/index.ts","shopping-book-cart-item/shopping-book-cart-item.tsx","shopping-cart-table/index.ts","shopping-cart-table/shopping-cart-table.tsx","components/pages/card-page.tsx","components/pages/main-page.tsx","shop-header/index.ts","shop-header/shop-header.tsx","components/app/index.ts","components/app/app.tsx","components/error-boundary/index.ts","components/error-boundary/error-boundary.tsx","reducers/book-list.ts","reducers/shopping-cart.ts","reducers/index.ts","store.ts","index.tsx"],"names":["RequestStatus","fetchBooksAsync","service","dispatch","type","payload","PENDING","getBooks","then","data","newBooks","status","FULFILLED","catch","err","error","ERROR","addBookToCatalogAsync","addedBook","addBook","getBookWithParams","title","author","newBook","updateBookInCatalogAsync","updatedBook","updateBook","getBookById","id","addBookToCart","bookId","amount","Spinner","ErrorIndicator","BookstoreService","apiBase","a","fetch","res","ok","Error","json","encodedTitle","encodeURIComponent","encodedAuthor","method","headers","Accept","body","JSON","stringify","price","coverImage","value","MyContext","React","createContext","bookListSelector","state","bookList","books","getCartItemsList","Object","values","shoppingCart","cartItems","getBookItemById","itemId","createSelector","find","book","UpdateBookForm","switchDisplayEditForm","serviceValue","useContext","useDispatch","useState","bookUpdated","setBookUpdated","imageSrc","setImageSrc","uploadImage","setUploadImage","schema","yup","shape","required","positive","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","getValues","reset","watch","useSelector","useMemo","watchImage","useEffect","url","imageSource","length","reader","FileReader","readAsDataURL","onload","src","result","getUpdatedImage","className","onSubmit","updateCoverImageValue","newData","setTimeout","htmlFor","alt","width","height","accept","placeholder","message","onClick","AddBookForm","bookAdded","setBookAdded","imageVisible","setImageVisible","test","SearchField","keyword","setKeyword","onChange","e","target","BookList","input","setInput","updateBookId","setUpdateBookId","isVisible","setIsVisible","setValue","setUpdateBookFormVisible","useCallback","event","currentTarget","dataset","Number","setAddBookFormVisible","isAddNewBook","isEditBook","upBookList","loading","savedBookList","filter","item","toLowerCase","includes","rowRendererItem","index","key","style","data-id","registerChild","scrollTop","ref","el","disableHeight","rowCount","rowHeight","autoHeight","rowRenderer","CatalogPage","getTotalSum","reduce","sum","bookItem","bookPrice","getTotalAmmount","ShoppingBookCartItem","idx","removeAllBooksFromCart","removeBookFromCart","ShoppingCartTable","totalSum","map","ShoppingCardPage","MainPage","ShopHeader","numItems","total","to","App","totalAmount","role","path","component","exact","ErrorBoundary","props","hasError","this","setState","children","Component","initialState","action","concat","slice","currentAmount","rootReducer","combineReducers","persistConfig","storage","whitelist","persistedReducer","persistReducer","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","persistor","persistStore","bookstoreService","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.1a6f5c30.chunk.js","sourcesContent":["import BookstoreService, { AddBookData, BookData } from '../services/bookstore-service';\n\nexport interface BookPayloadType {\n    type: string,\n    payload?: {\n        bookId: number,\n        amount: number\n    }\n\n}\n\nexport interface BookListPayloadType {\n    type: string,\n    payload?: Array<BookData>\n\n}\n\nexport enum RequestStatus {\n    PENDING = 'Pending',\n    FULFILLED = 'Fulfilled',\n    ERROR = 'Error'\n}\n\n// fetch books catalog actions\n\nexport const fetchBooks = (newBooks: Array<BookData>, status: RequestStatus) => ({\n  type: 'FETCH_BOOKS_REQUEST_SUCCESS',\n  payload: { newBooks, status },\n});\n\nexport const fetchBooksPending = () => ({\n  type: 'FETCH_BOOKS_REQUEST_PENDING',\n  payload: RequestStatus.PENDING,\n});\n\nexport const fetchBooksError = (error: any, status: RequestStatus) => ({\n  type: 'FETCH_BOOKS_REQUEST_ERROR',\n  payload: { error, status },\n});\n\nexport const fetchBooksAsync = (service: BookstoreService) => (dispatch: any) => {\n  dispatch(fetchBooksPending());\n  return service.getBooks()\n    .then((data: any) => dispatch(fetchBooks(data, RequestStatus.FULFILLED)))\n    .catch((err: any) => dispatch(fetchBooksError(err, RequestStatus.ERROR)));\n};\n\n// add book to catalog actions\n\nexport const addBook = (newBook: BookData, status: RequestStatus) => ({\n  type: 'BOOK_ADDED_TO_CATALOG',\n  payload: { newBook, status },\n});\n\nexport const addBookPending = () => ({\n  type: 'ADD_BOOKS_REQUEST_PENDING',\n  payload: RequestStatus.PENDING,\n});\n\nexport const addBookError = (error: any, status: RequestStatus) => ({\n  type: 'ADD_BOOKS_REQUEST_ERROR',\n  payload: { error, status },\n});\n\nexport const addBookToCatalogAsync = (\n  service: BookstoreService,\n  addedBook: AddBookData,\n) => (dispatch: any) => {\n  dispatch(addBookPending());\n  return service.addBook(addedBook)\n    .then(() => {\n      service.getBookWithParams(addedBook.title, addedBook.author)\n        .then((data: any) => dispatch(addBook(data, RequestStatus.FULFILLED)));\n    })\n    .catch((err: any) => dispatch(addBookError(err, RequestStatus.ERROR)));\n};\n\n// update book in catalog actions\n\nexport const updateBook = (updatedBook: BookData, status: RequestStatus) => ({\n  type: 'BOOK_UPDATED_IN_CATALOG',\n  payload: { updatedBook, status },\n});\n\nexport const updateBookPending = () => ({\n  type: 'UPDATE_BOOKS_REQUEST_PENDING',\n  payload: RequestStatus.PENDING,\n});\n\nexport const updateBookError = (error: any, status: RequestStatus) => ({\n  type: 'UPDATE_BOOKS_REQUEST_ERROR',\n  payload: { error, status },\n});\n\nexport const updateBookInCatalogAsync = (\n  service: BookstoreService,\n  updatedBook: BookData,\n) => (dispatch: any) => {\n  dispatch(updateBookPending());\n  return service.updateBook(updatedBook)\n    .then(() => {\n      service.getBookById(updatedBook.id)\n        .then((data: any) => dispatch(updateBook(data, RequestStatus.FULFILLED)));\n    })\n    .catch((err: any) => dispatch(updateBookError(err, RequestStatus.ERROR)));\n};\n\n// add book to card actions\n\nexport const addBookToCart = (bookId: number, amount: number = 1) => ({\n  type: 'BOOK_ADDED_TO_CART',\n  payload: { bookId, amount },\n});\n\nexport const removeBookFromCart = (bookId: number, amount: number = -1) => ({\n  type: 'BOOK_REMOVED_TO_CART',\n  payload: { bookId, amount },\n});\n\nexport const removeAllBooksFromCart = (bookId: number, amount: number = 0) => ({\n  type: 'ALL_BOOKS_REMOVED_TO_CART',\n  payload: { bookId, amount },\n});\n","import Spinner from './spinner';\n\nexport default Spinner;\n","import React from 'react';\nimport './spinner.css';\n\nconst Spinner = () => <div>loading...</div>;\n\nexport default Spinner;\n","import ErrorIndicator from './error-indicator';\n\nexport default ErrorIndicator;\n","import React from 'react';\nimport './error-indicator.css';\n\nconst ErrorIndicator = () => <div>Error!</div>;\n\nexport default ErrorIndicator;\n","export type BookData = {\n  id: number,\n  title: string,\n  author: string,\n  price: number,\n  coverImage: string\n}\n\nexport type AddBookData = {\n  title: string,\n  author: string,\n  price: number,\n  coverImage: string\n}\n\nexport default class BookstoreService {\n    apiBase = 'http://localhost:8000'\n\n    getBooks = async () => {\n      const res = await fetch(`${this.apiBase}/books`);\n      if (!res.ok) {\n        throw new Error('My Error message');\n      } else return res.json();\n    }\n\n    getBookWithParams = async (\n      title: string,\n      author: string,\n    ) => {\n      const encodedTitle = encodeURIComponent(title);\n      const encodedAuthor = encodeURIComponent(author);\n      const res = await fetch(`${this.apiBase}/books?title=${encodedTitle}&author=${encodedAuthor}`);\n      if (!res.ok) {\n        throw new Error('My Error message');\n      } else return res.json();\n    }\n\n    getBookById = async (id: number) => {\n      const res = await fetch(`${this.apiBase}/books/${id}`);\n      if (!res.ok) {\n        throw new Error('My Error message');\n      } else return res.json();\n    }\n\n    addBook = async (data: AddBookData) => {\n      const res = await fetch(`${this.apiBase}/books`, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          title: data.title,\n          author: data.author,\n          price: data.price,\n          coverImage: data.coverImage,\n        }),\n      });\n      if (!res.ok) {\n        throw new Error('My Error message');\n      }\n    }\n\n    updateBook = async (data: BookData) => {\n      const res = await fetch(`${this.apiBase}/books/${data.id}`, {\n        method: 'PUT',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          title: data.title,\n          author: data.author,\n          price: data.price,\n          coverImage: data.coverImage,\n        }),\n      });\n      if (!res.ok) {\n        throw new Error('My Error message');\n      }\n    }\n}\n","import React from 'react';\nimport BookstoreService from '../../services/bookstore-service';\n\nconst value = new BookstoreService();\n\nconst MyContext = React.createContext(value);\n\nexport default MyContext;\n","import MyContext from './bookstore-service-context';\n\nexport default MyContext;\n","import { createSelector } from 'reselect';\nimport { RootState } from '.';\nimport { BookData } from '../services/bookstore-service';\n\nexport const bookListSelector = (state: RootState) => state.bookList.books;\n\nexport const getCartItemsList = (state: RootState) => Object.values(state.shoppingCart.cartItems);\n\nexport const getBookItemById = (itemId: number) => createSelector(\n  bookListSelector,\n  (books) => books.find((book: BookData) => book.id === itemId),\n);\n\nexport const getCartItemById = (\n  itemId: number,\n) => (state: RootState) => state.shoppingCart.cartItems[itemId];\n","import UpdateBookForm from './update-book-form';\n\nexport default UpdateBookForm;\n","import React, {\n  FC, useContext, useEffect, useMemo, useState,\n} from 'react';\nimport './update-book-form.css';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { BookData } from '../../services/bookstore-service';\nimport MyContext from '../bookstore-service-context';\nimport { updateBookInCatalogAsync } from '../../actions';\nimport { AppDispatch } from '../../store';\nimport { getBookItemById } from '../../reducers/selectors';\n\ninterface BookItemType {\n    bookId: number,\n    switchDisplayEditForm: any\n}\n\nconst UpdateBookForm: FC<BookItemType> = ({ bookId, switchDisplayEditForm }) => {\n  const serviceValue = useContext(MyContext);\n  const dispatch: AppDispatch = useDispatch();\n  const [bookUpdated, setBookUpdated] = useState(false);\n  const [imageSrc, setImageSrc] = useState('');\n  const [uploadImage, setUploadImage] = useState('');\n\n  const schema = yup.object().shape({\n    title: yup.string().required('Book Title should be filled in'),\n    author: yup.string().required('Book Author should be filled in'),\n    price: yup.number().required().positive('Book Price should be positive number'),\n    coverImage: yup.mixed(),\n  });\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    getValues,\n    reset,\n    watch,\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const updatedBook = useSelector(useMemo(() => getBookItemById(bookId), [bookId])) as BookData;\n\n  const watchImage = watch('coverImage', updatedBook.coverImage);\n\n  useEffect(() => {\n    const getUpdatedImage = () => {\n      let imageSource = '';\n      if (watchImage.length !== 0) {\n        if (typeof watchImage !== 'string') {\n          if (watchImage[0]) {\n            const reader = new FileReader();\n            reader.readAsDataURL(watchImage[0]);\n            reader.onload = () => {\n              const src = reader.result as string;\n              setImageSrc(src);\n            };\n            imageSource = imageSrc;\n          }\n        } else imageSource = updatedBook.coverImage;\n      } else imageSource = updatedBook.coverImage;\n      return imageSource;\n    };\n    const url = getUpdatedImage() as string;\n    setUploadImage(url);\n  }, [watchImage, imageSrc, updatedBook.coverImage]);\n\n  useEffect(() => {\n    reset({\n      title: updatedBook.title,\n      author: updatedBook.author,\n      price: updatedBook.price,\n    });\n  }, [updatedBook, reset]);\n\n  const onSubmit = (data: any) => {\n    let updateCoverImageValue: string;\n    if (data.coverImage.length !== 0) {\n      updateCoverImageValue = imageSrc;\n    } else {\n      updateCoverImageValue = updatedBook.coverImage;\n    }\n    const newData = {\n      id: updatedBook.id,\n      title: data.title,\n      author: data.author,\n      price: data.price,\n      coverImage: updateCoverImageValue,\n    };\n    dispatch(updateBookInCatalogAsync(serviceValue, newData))\n      .then(() => setBookUpdated(true));\n\n    setTimeout(() => {\n      setBookUpdated(false);\n    }, 3000);\n  };\n\n  return (\n    <div>\n      <form className=\"update-book-form\" onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"update-book-container\">\n          <div className=\"update-book-image-container\">\n            <label htmlFor=\"temp-id\">\n              Book Cover Image\n            </label>\n            <img id=\"image2\" alt=\"cover_image2\" width=\"120px\" height=\"200px\" src={uploadImage} />\n            <label className=\"upload-file-btn\" htmlFor=\"file2\">\n              Browse\n              <input type=\"file\" id=\"file2\" accept=\".png, .jpg, .jpeg\" {...register('coverImage')} />\n            </label>\n            {/* {errors.coverImage && (<p>{errors.coverImage.message}</p>)} */}\n          </div>\n          <div className=\"update-book-group\">\n            <div>\n              <label htmlFor=\"inputTitle\" className=\"title-label\">Book Title</label>\n              <input id=\"inputTitle\" type=\"text\" placeholder=\"title\" {...register('title')} />\n              {errors.title && (<p>{errors.title.message}</p>)}\n            </div>\n            <div>\n              <label htmlFor=\"inputAuthor\">Book Author</label>\n              <input id=\"inputAuthor\" type=\"text\" placeholder=\"author\" {...register('author')} />\n              {errors.author && (<p>{errors.author.message}</p>)}\n            </div>\n            <div>\n              <label htmlFor=\"inputPrice\">Book Price</label>\n              <input id=\"inputPrice\" type=\"number\" placeholder=\"price in $\" {...register('price')} />\n              {errors.price && (getValues('price') === '') && (<p>Book Price should be filled in</p>)}\n              {errors.price && (getValues('price') < 0) && (<p>{errors.price.message}</p>)}\n            </div>\n          </div>\n        </div>\n        <div className=\"update-book-group3\">\n          <input type=\"submit\" value=\"Save changes\" className=\"btn btn-info save-edit-book\" />\n          <button className=\"btn btn-info cancel-edit-book\" type=\"button\" onClick={() => switchDisplayEditForm(false)}>\n            Cancel Editing\n          </button>\n        </div>\n      </form>\n      {bookUpdated && (<p className=\"book-added-confirmation\">Book successfully updated</p>)}\n    </div>\n  );\n};\n\nexport default UpdateBookForm;\n","import AddBookForm from './add-book-form';\n\nexport default AddBookForm;\n","import React, {\n  FC, useEffect, useState, useContext,\n} from 'react';\nimport { useForm } from 'react-hook-form';\nimport './add-book-form.css';\nimport { useDispatch } from 'react-redux';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { addBookToCatalogAsync } from '../../actions';\nimport MyContext from '../bookstore-service-context/bookstore-service-context';\nimport { AppDispatch } from '../../store';\n\nconst AddBookForm: FC<any> = () => {\n  const serviceValue = useContext(MyContext);\n  const dispatch: AppDispatch = useDispatch();\n  const [bookAdded, setBookAdded] = useState(false);\n  const [imageVisible, setImageVisible] = useState(false);\n  const [imageSrc, setImageSrc] = useState('');\n\n  const schema = yup.object().shape({\n    title: yup.string().required('Book Title should be filled in'),\n    author: yup.string().required('Book Author should be filled in'),\n    price: yup.number().required().positive('Book Price should be positive number'),\n    coverImage: yup.mixed().test('fileType', 'Image should be uploaded', (value) => value && value.length !== 0),\n  });\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n    getValues,\n    watch,\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const watchImage = watch('coverImage');\n\n  useEffect(() => {\n    if (watchImage) {\n      if (watchImage[0]) {\n        const reader = new FileReader();\n        reader.readAsDataURL(watchImage[0]);\n        reader.onload = () => {\n          const src = reader.result as string;\n          setImageSrc(src);\n        };\n      }\n    }\n  }, [watchImage]);\n\n  const onSubmit = (data: any) => {\n    const newData = {\n      title: data.title,\n      author: data.author,\n      price: data.price,\n      coverImage: imageSrc,\n    };\n    dispatch(addBookToCatalogAsync(serviceValue, newData))\n      .then(() => setBookAdded(true));\n\n    setTimeout(() => {\n      setBookAdded(false);\n      reset({});\n      setImageVisible(false);\n    }, 3000);\n  };\n\n  return (\n    <div>\n      <form className=\"add-book-form\" onSubmit={handleSubmit(onSubmit)}>\n        <label htmlFor=\"inputTitle\" className=\"title-label\">Book Title</label>\n        <input id=\"inputTitle\" type=\"text\" placeholder=\"title\" {...register('title')} />\n        {errors.title && (<p>{errors.title.message}</p>)}\n\n        <label htmlFor=\"inputAuthor\">Book Author</label>\n        <input id=\"inputAuthor\" type=\"text\" placeholder=\"author\" {...register('author')} />\n        {errors.author && (<p>{errors.author.message}</p>)}\n\n        <label htmlFor=\"inputPrice\">Book Price</label>\n        <input id=\"inputPrice\" type=\"number\" placeholder=\"price in $\" {...register('price')} />\n        {errors.price && (getValues('price') === '') && (<p>Book Price should be filled in</p>)}\n        {errors.price && (getValues('price') < 0) && (<p>{errors.price.message}</p>)}\n\n        <label htmlFor=\"temp-id\">Book Cover Image</label>\n        <label className=\"upload-file-btn\">\n          Browse\n          <input type=\"file\" id=\"file1\" accept=\".png, .jpg, .jpeg\" {...register('coverImage')} />\n        </label>\n\n        {watchImage && (watchImage.length !== 0)\n                && (<img id=\"image1\" alt=\"cover_image1\" width=\"120px\" height=\"200px\" src={imageSrc} />)}\n        {errors.coverImage && !imageVisible && (<p>{errors.coverImage.message}</p>)}\n\n        <input type=\"submit\" value=\"Add new book\" className=\"btn btn-info\" />\n        {bookAdded && (<p className=\"book-added-confirmation\">Book successfully added</p>)}\n      </form>\n    </div>\n  );\n};\n\nexport default AddBookForm;\n","import SearchField from './search-field';\n\nexport default SearchField;\n","import React, { FC } from 'react';\nimport './search-field.css';\n\ninterface SearchFieldType {\n    keyword: string,\n    setKeyword: any\n}\n\nconst SearchField: FC<SearchFieldType> = ({ keyword, setKeyword }) => (\n  <div className=\"search-field\">\n    <span className=\"search-title\">Find your book</span>\n    <input\n      className=\"search\"\n      key=\"random1\"\n      value={keyword}\n      placeholder=\"search book\"\n      onChange={(e) => setKeyword(e.target.value)}\n    />\n  </div>\n);\n\nexport default SearchField;\n","import BookList from './book-list';\n\nexport default BookList;\n","import React, {\n  MouseEvent, useCallback, useState, useMemo, useContext, useEffect,\n} from 'react';\nimport './book-list.css';\nimport '../book-list-item/book-list-item.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { List, AutoSizer, WindowScroller } from 'react-virtualized';\nimport { addBookToCart, fetchBooksAsync } from '../../actions';\nimport Spinner from '../spiner';\nimport ErrorIndicator from '../error-indicator';\nimport { RootState } from '../../reducers';\nimport MyContext from '../bookstore-service-context/bookstore-service-context';\nimport UpdateBookForm from '../update-book-form';\nimport AddBookForm from '../add-book-form';\nimport SearchField from '../search-field';\n\nconst BookListContainer = () => {\n  const [input, setInput] = useState('');\n  const [updateBookId, setUpdateBookId] = useState(0);\n  const [isVisible, setIsVisible] = useState(false);\n  const [value, setValue] = useState<number | null>(null);\n\n  const setUpdateBookFormVisible = useCallback(\n    (event: MouseEvent<HTMLButtonElement>) => {\n      if (event.currentTarget.dataset.id) {\n        setUpdateBookId(Number(event.currentTarget.dataset.id));\n        setValue(Number(event.currentTarget.dataset.id));\n      }\n      setIsVisible(true);\n    }, [],\n  );\n\n  const setAddBookFormVisible = useCallback(() => {\n    if (!isVisible || !value) {\n      setIsVisible(!isVisible);\n    }\n    setValue(null);\n  }, [isVisible, value]);\n\n  const isAddNewBook = useMemo(() => isVisible && !value, [isVisible, value]);\n\n  const isEditBook = useMemo(() => isVisible && value, [isVisible, value]);\n\n  const upBookList = useSelector((state: RootState) => state.bookList);\n\n  const serviceValue = useContext(MyContext);\n\n  const dispatch = useDispatch();\n\n  const { books, loading, error } = upBookList;\n\n  const savedBookList = useMemo(\n    () => books.filter(\n      (item) => item.title.toLowerCase().includes(input.toLowerCase()),\n    ),\n    [input, books],\n  );\n\n  useEffect(\n    () => { dispatch(fetchBooksAsync(serviceValue)); }, [dispatch, serviceValue],\n  );\n\n  const rowRendererItem = ({ index, key, style }: any) => {\n    const book = savedBookList[index];\n    if (book) {\n      const {\n        id, title, author, price, coverImage,\n      } = book;\n      return (\n        <div className=\"book-list-item\" style={style} key={key}>\n          <div className=\"book-cover\">\n            <img src={coverImage} alt=\"cover\" />\n          </div>\n          <div className=\"book-details\">\n            <span className=\"book-title\">{title}</span>\n            <div className=\"book-author\">{author}</div>\n            <div className=\"book-price\">\n              $\n              {price}\n            </div>\n            <div>\n              <button type=\"button\" className=\"btn btn-info add-to-cart\" onClick={() => dispatch(addBookToCart(id))}>\n                Add to cart\n              </button>\n              <button type=\"button\" className=\"btn btn-info edit-book\" onClick={setUpdateBookFormVisible} data-id={id}>\n                Edit Book\n              </button>\n            </div>\n          </div>\n        </div>\n      );\n    } return null;\n  };\n\n  if (loading) {\n    return (<Spinner />);\n  }\n\n  if (error) {\n    return (<ErrorIndicator />);\n  }\n\n  return (\n    <div>\n      <SearchField keyword={input} setKeyword={setInput} />\n      <button type=\"button\" className=\"btn btn-info show-add-new-book\" onClick={setAddBookFormVisible}>\n        Add Book\n      </button>\n\n      {isAddNewBook && (<AddBookForm />)}\n\n      {\n        isEditBook && (\n        <UpdateBookForm\n          bookId={updateBookId}\n          switchDisplayEditForm={() => setIsVisible(false)}\n        />\n        )\n      }\n\n      <div>\n        <WindowScroller>\n          {({ height, registerChild, scrollTop }) => (\n            <div ref={(el) => registerChild(el)} className=\"book-list\">\n              <AutoSizer disableHeight>\n                {\n                  ({ width }) => (\n                    <List\n                      width={width}\n                      height={height}\n                      rowCount={savedBookList.length}\n                      rowHeight={220}\n                      autoHeight\n                      scrollTop={scrollTop}\n                      rowRenderer={rowRendererItem}\n                    />\n                  )\n                }\n              </AutoSizer>\n            </div>\n          )}\n        </WindowScroller>\n      </div>\n\n    </div>\n  );\n};\n\nexport default BookListContainer;\n","import React from 'react';\nimport BookListContainer from '../book-list';\n\nconst CatalogPage = () => (\n  <div>\n    <BookListContainer />\n  </div>\n);\n\nexport default CatalogPage;\n","import { createSelector } from 'reselect';\nimport {\n  bookListSelector, getBookItemById, getCartItemById, getCartItemsList,\n} from '../reducers/selectors';\nimport { BookData } from '../services/bookstore-service';\n\nexport const getItemSumById = (itemId: number) => createSelector(\n  getBookItemById(itemId),\n  getCartItemById(itemId),\n  (item: BookData | undefined, cartItem: {id: number, amount: number}) => {\n    const itemPrice = item?.price ?? 0;\n    return itemPrice * cartItem.amount;\n  },\n);\n\nexport const getTotalSum = createSelector(\n  getCartItemsList,\n  bookListSelector,\n  (\n    cartItems: Array<{id: number, amount: number}>, books: Array<BookData>,\n  ) => cartItems.reduce((sum: number, item: {id: number, amount: number}) => {\n    const book = books.find((bookItem: BookData) => bookItem.id === item.id);\n    const bookPrice = book?.price ?? 0;\n    return sum + item.amount * bookPrice;\n  }, 0),\n);\n\nexport const getTotalAmmount = createSelector(\n  getCartItemsList,\n  (\n    cartItems: Array<{id: number, amount: number}>,\n  ) => cartItems.reduce((sum: number, item: {id: number, amount: number}) => sum + item.amount, 0),\n);\n","import ShoppingBookCartItem from './shopping-book-cart-item';\n\nexport default ShoppingBookCartItem;\n","import React, { FC, useMemo } from 'react';\nimport './shopping-book-cart-item.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  addBookToCart,\n  removeBookFromCart,\n  removeAllBooksFromCart,\n} from '../actions';\nimport { getBookItemById } from '../reducers/selectors';\n\ninterface ShoppingBookCartItemType {\n  item:\n      {id: number,\n      amount: number\n    }\n  idx: number\n}\n\nconst ShoppingBookCartItem: FC<ShoppingBookCartItemType> = ({ item, idx }) => {\n  const dispatch = useDispatch();\n\n  const { id, amount } = item;\n\n  const bookItem = useSelector(useMemo(() => getBookItemById(item.id), [item.id]));\n\n  if (!bookItem) {\n    return <></>;\n  }\n  const { title, price, coverImage } = bookItem;\n\n  return (\n    <tr key={id}>\n      <td>{idx + 1}</td>\n      <td>\n        <div className=\"book-coverage\">\n          <img src={coverImage} alt=\"cover\" />\n        </div>\n      </td>\n      <td>{title}</td>\n      <td>{amount}</td>\n      <td>\n        $\n        {price * amount}\n      </td>\n      <td>\n        <button\n          type=\"button\"\n          onClick={() => dispatch(removeAllBooksFromCart(id))}\n          className=\"btn btn-outline-danger btn-sm float-right\"\n        >\n          <i className=\"fa fa-trash-o\" />\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => dispatch(addBookToCart(id))}\n          className=\"btn btn-outline-success btn-sm float-right\"\n        >\n          <i className=\"fa fa-plus-circle\" />\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => dispatch(removeBookFromCart(id))}\n          className=\"btn btn-outline-warning btn-sm float-right\"\n        >\n          <i className=\"fa fa-minus-circle\" />\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nexport default ShoppingBookCartItem;\n","import ShoppingCartTable from './shopping-cart-table';\n\nexport default ShoppingCartTable;\n","import React, { useContext, useEffect } from 'react';\nimport './shopping-cart-table.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getTotalSum } from './selectors';\nimport ShoppingBookCartItem from '../shopping-book-cart-item';\nimport { getCartItemsList } from '../reducers/selectors';\nimport MyContext from '../components/bookstore-service-context';\nimport { fetchBooksAsync } from '../actions';\n\nconst ShoppingCartTable = () => {\n  // block added here in order to set all books in state when page is loaded\n  const dispatch = useDispatch();\n  const serviceValue = useContext(MyContext);\n  useEffect(\n    () => {\n      dispatch(fetchBooksAsync(serviceValue));\n    },\n    [dispatch, serviceValue],\n  );\n\n  const totalSum = useSelector(getTotalSum);\n  const cartItems = useSelector(getCartItemsList);\n\n  return (\n    <div className=\"shopping-cart-table\">\n      <h2>Your Order</h2>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Item</th>\n            <th className=\"title\">Title</th>\n            <th>Count</th>\n            <th>Price</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          { cartItems.map(\n            (item, idx) => <ShoppingBookCartItem key={item.id} idx={idx} item={item} />,\n          )}\n        </tbody>\n      </table>\n\n      <div className=\"total\">\n        Total: $\n        {totalSum}\n      </div>\n    </div>\n  );\n};\n\nexport default ShoppingCartTable;\n","import React from 'react';\nimport ShoppingCartTable from '../../shopping-cart-table';\n\nconst ShoppingCardPage = () => (\n  <div>\n    <ShoppingCartTable />\n  </div>\n);\n\nexport default ShoppingCardPage;\n","import React from 'react';\n\nconst MainPage = () => (\n  <div>\n    Welcome to Book Store Main Page!!!!!!!!!!!!!!!!!!!!!!\n  </div>\n);\n\nexport default MainPage;\n","import ShopHeader from './shop-header';\n\nexport default ShopHeader;\n","import React, { FC } from 'react';\nimport './shop-header.css';\nimport { Link } from 'react-router-dom';\n\ntype ShopHeaderType = {\n  numItems: number,\n  total: number\n}\n\nconst ShopHeader:FC<ShopHeaderType> = ({ numItems, total }) => (\n  <header className=\"shop-header row\">\n    <Link to=\"/\">\n      <div className=\"logo text-dark\">ReStore</div>\n    </Link>\n    <div className=\"shop-items\">\n      <Link to=\"/catalog\">\n        <div className=\"store\">Books Catalog</div>\n      </Link>\n      <Link to=\"/items\">\n        <div className=\"shopping-cart\">\n          <i className=\"cart-icon fa fa-shopping-cart\" />\n          {numItems}\n          {' '}\n          items ($\n          {total}\n          )\n        </div>\n      </Link>\n    </div>\n\n  </header>\n);\n\nexport default ShopHeader;\n","import App from './app';\n\nexport default App;\n","import React from 'react';\nimport './app.css';\nimport { Route, Switch } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { CatalogPage, MainPage, ShoppingCardPage } from '../pages';\nimport ShopHeader from '../../shop-header';\nimport { getTotalAmmount, getTotalSum } from '../../shopping-cart-table/selectors';\n\nconst App = () => {\n  const totalSum = useSelector(getTotalSum);\n  const totalAmount = useSelector(getTotalAmmount);\n\n  return (\n    <main role=\"main\" className=\"container\">\n      <ShopHeader numItems={totalAmount} total={totalSum} />\n      <Switch>\n        <Route\n          path=\"/\"\n          component={MainPage}\n          exact\n        />\n        <Route\n          path=\"/catalog\"\n          component={CatalogPage}\n          exact\n        />\n        <Route\n          path=\"/items\"\n          component={ShoppingCardPage}\n        />\n      </Switch>\n    </main>\n  );\n};\n\nexport default App;\n","import ErrorBoundary from './error-boundary';\n\nexport default ErrorBoundary;\n","import React, { Component } from 'react';\nimport ErrorIndicator from '../error-indicator';\n\nexport default class ErrorBoundary extends Component<{ children: any }, { hasError: any }> {\n  constructor(props: any) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  componentDidCatch() {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    const { hasError } = this.state;\n    const { children } = this.props;\n    if (hasError.hasError) {\n      return <ErrorIndicator />;\n    }\n\n    return children.props.children;\n  }\n}\n","import { AnyAction } from 'redux';\nimport { BookData } from '../services/bookstore-service';\n\nconst initialState = {\n  books: [],\n  loading: true,\n  error: null,\n  status: '',\n};\n\ninterface BookListType {\n    books: Array<BookData>,\n    loading: boolean,\n    error: any,\n    status: any\n}\n\nconst bookList = (state: BookListType = initialState, action: AnyAction): BookListType => {\n  switch (action.type) {\n    case 'FETCH_BOOKS_REQUEST_PENDING':\n      return {\n        books: [],\n        loading: true,\n        error: null,\n        status: action.payload,\n      };\n\n    case 'FETCH_BOOKS_REQUEST_SUCCESS':\n      return {\n        books: action.payload.newBooks!,\n        loading: false,\n        error: null,\n        status: action.payload.status!,\n      };\n\n    case 'FETCH_BOOKS_REQUEST_ERROR':\n      return {\n        books: [],\n        loading: false,\n        error: action.payload.error!,\n        status: action.payload.status!,\n      };\n\n    case 'BOOK_ADDED_TO_CATALOG': {\n      return {\n        ...state,\n        books: state.books.concat(action.payload.newBook[0]!),\n        status: action.payload.status!,\n      };\n    }\n\n    case 'BOOK_UPDATED_IN_CATALOG': {\n      return {\n        ...state,\n        books: state.books.slice(0, action.payload.updatedBook!.id - 1)\n          .concat(action.payload.updatedBook!)\n          .concat(state.books.slice(action.payload.updatedBook!.id, state.books.length)),\n        status: action.payload.status!,\n      };\n    }\n\n    case 'ADD_BOOKS_REQUEST_ERROR':\n    case 'UPDATE_BOOKS_REQUEST_ERROR':\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error!,\n        status: action.payload.status!,\n      };\n\n    case 'ADD_BOOKS_REQUEST_PENDING':\n    case 'UPDATE_BOOKS_REQUEST_PENDING':\n      return {\n        ...state,\n        status: action.payload.status!,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default bookList;\n","import { BookPayloadType } from '../actions';\n\ninterface ShoppingCartType {\n    cartItems: {\n        [id: number] : {id: number, amount: number}\n    }\n}\n\nconst initialState = {\n  cartItems: {},\n};\n\nconst shoppingCart = (state: ShoppingCartType = initialState, action: BookPayloadType) => {\n  switch (action.type) {\n    case 'BOOK_ADDED_TO_CART': {\n      const currentAmount = state.cartItems[action.payload!.bookId]?.amount ?? 0;\n      return {\n        ...state,\n        cartItems: {\n          ...state.cartItems,\n          [action.payload!.bookId]: {\n            id: action.payload!.bookId,\n            amount: currentAmount + action.payload!.amount,\n          },\n        },\n\n      };\n    }\n\n    case 'BOOK_REMOVED_TO_CART': {\n      const currentAmount = state.cartItems[action.payload!.bookId]?.amount ?? 0;\n      if (currentAmount === 1) {\n        delete state.cartItems[action.payload!.bookId];\n        return {\n          ...state,\n          cartItems: {\n            ...state.cartItems,\n          },\n\n        };\n      }\n      return {\n        ...state,\n        cartItems: {\n          ...state.cartItems,\n          [action.payload!.bookId]: {\n            id: action.payload!.bookId,\n            amount: currentAmount + action.payload!.amount,\n          },\n        },\n\n      };\n    }\n\n    case 'ALL_BOOKS_REMOVED_TO_CART':\n      delete state.cartItems[action.payload!.bookId];\n      return {\n        ...state,\n        cartItems: {\n          ...state.cartItems,\n        },\n\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default shoppingCart;\n","import { combineReducers } from 'redux';\nimport bookList from './book-list';\nimport shoppingCart from './shopping-cart';\n\nconst rootReducer = combineReducers({\n  bookList,\n  shoppingCart,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>\n\nexport default rootReducer;\n","import {\n  createStore, applyMiddleware, compose, AnyAction,\n} from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport thunk, { ThunkDispatch } from 'redux-thunk';\nimport rootReducer, { RootState } from './reducers';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['shoppingCart'],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(persistedReducer, composeEnhancer(applyMiddleware(thunk)));\nexport const persistor = persistStore(store);\n\nexport type AppDispatch = ThunkDispatch<RootState, any, AnyAction>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './components/app';\nimport MyContext from './components/bookstore-service-context';\nimport ErrorBoundary from './components/error-boundary';\nimport BookstoreService from './services/bookstore-service';\nimport { persistor, store } from './store';\n\nconst bookstoreService = new BookstoreService();\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <ErrorBoundary>\n        <MyContext.Provider value={bookstoreService}>\n          <Router>\n            <App />\n          </Router>\n        </MyContext.Provider>\n      </ErrorBoundary>\n    </PersistGate>\n\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}